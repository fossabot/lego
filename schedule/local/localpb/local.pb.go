// Code generated by protoc-gen-go. DO NOT EDIT.
// source: schedule/local/localpb/local.proto

/*
Package local is a generated protocol buffer package.

It is generated from these files:
	schedule/local/localpb/local.proto

It has these top-level messages:
	Index
	Job
	JobOptions
*/
package local

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Consistency int32

const (
	Consistency_AtMostOnce  Consistency = 0
	Consistency_AtLeastOnce Consistency = 1
)

var Consistency_name = map[int32]string{
	0: "AtMostOnce",
	1: "AtLeastOnce",
}
var Consistency_value = map[string]int32{
	"AtMostOnce":  0,
	"AtLeastOnce": 1,
}

func (x Consistency) String() string {
	return proto.EnumName(Consistency_name, int32(x))
}
func (Consistency) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Index struct {
	Min  int64    `protobuf:"varint,1,opt,name=min" json:"min,omitempty"`
	Max  int64    `protobuf:"varint,2,opt,name=max" json:"max,omitempty"`
	Keys []string `protobuf:"bytes,3,rep,name=keys" json:"keys,omitempty"`
}

func (m *Index) Reset()                    { *m = Index{} }
func (m *Index) String() string            { return proto.CompactTextString(m) }
func (*Index) ProtoMessage()               {}
func (*Index) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Index) GetMin() int64 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *Index) GetMax() int64 {
	if m != nil {
		return m.Max
	}
	return 0
}

func (m *Index) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

type Job struct {
	Id      string      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Target  string      `protobuf:"bytes,2,opt,name=target" json:"target,omitempty"`
	Due     int64       `protobuf:"varint,3,opt,name=due" json:"due,omitempty"`
	Data    []byte      `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Attempt uint32      `protobuf:"varint,5,opt,name=attempt" json:"attempt,omitempty"`
	Options *JobOptions `protobuf:"bytes,15,opt,name=options" json:"options,omitempty"`
}

func (m *Job) Reset()                    { *m = Job{} }
func (m *Job) String() string            { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()               {}
func (*Job) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Job) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Job) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *Job) GetDue() int64 {
	if m != nil {
		return m.Due
	}
	return 0
}

func (m *Job) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Job) GetAttempt() uint32 {
	if m != nil {
		return m.Attempt
	}
	return 0
}

func (m *Job) GetOptions() *JobOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

type JobOptions struct {
	RetryLimit  uint32      `protobuf:"varint,1,opt,name=retryLimit" json:"retryLimit,omitempty"`
	MinBackOff  int64       `protobuf:"varint,2,opt,name=minBackOff" json:"minBackOff,omitempty"`
	MaxBackOff  int64       `protobuf:"varint,3,opt,name=maxBackOff" json:"maxBackOff,omitempty"`
	AgeLimit    int64       `protobuf:"varint,4,opt,name=ageLimit" json:"ageLimit,omitempty"`
	Consistency Consistency `protobuf:"varint,5,opt,name=consistency,enum=local.Consistency" json:"consistency,omitempty"`
}

func (m *JobOptions) Reset()                    { *m = JobOptions{} }
func (m *JobOptions) String() string            { return proto.CompactTextString(m) }
func (*JobOptions) ProtoMessage()               {}
func (*JobOptions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *JobOptions) GetRetryLimit() uint32 {
	if m != nil {
		return m.RetryLimit
	}
	return 0
}

func (m *JobOptions) GetMinBackOff() int64 {
	if m != nil {
		return m.MinBackOff
	}
	return 0
}

func (m *JobOptions) GetMaxBackOff() int64 {
	if m != nil {
		return m.MaxBackOff
	}
	return 0
}

func (m *JobOptions) GetAgeLimit() int64 {
	if m != nil {
		return m.AgeLimit
	}
	return 0
}

func (m *JobOptions) GetConsistency() Consistency {
	if m != nil {
		return m.Consistency
	}
	return Consistency_AtMostOnce
}

func init() {
	proto.RegisterType((*Index)(nil), "local.Index")
	proto.RegisterType((*Job)(nil), "local.Job")
	proto.RegisterType((*JobOptions)(nil), "local.JobOptions")
	proto.RegisterEnum("local.Consistency", Consistency_name, Consistency_value)
}

func init() { proto.RegisterFile("schedule/local/localpb/local.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 330 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x91, 0xcf, 0x6a, 0xe3, 0x30,
	0x10, 0xc6, 0x57, 0x71, 0xfe, 0x6c, 0xc6, 0x9b, 0x3f, 0x3b, 0x87, 0x45, 0xec, 0xa1, 0x18, 0x9f,
	0x4c, 0x0b, 0x29, 0xa4, 0xbd, 0x97, 0xb4, 0xa7, 0x86, 0x94, 0x80, 0xde, 0x40, 0xb6, 0x95, 0x54,
	0x24, 0x96, 0x8c, 0x3d, 0x01, 0xe7, 0x55, 0xfa, 0x30, 0x7d, 0xb6, 0x62, 0xd9, 0x49, 0x7c, 0x91,
	0xe6, 0xfb, 0x7e, 0xa3, 0x8f, 0x19, 0x04, 0x61, 0x99, 0x7c, 0xaa, 0xf4, 0x74, 0x54, 0x8f, 0x47,
	0x9b, 0xc8, 0x63, 0x73, 0xe6, 0x71, 0x73, 0x2f, 0xf2, 0xc2, 0x92, 0xc5, 0x81, 0x13, 0xe1, 0x0b,
	0x0c, 0xde, 0x4d, 0xaa, 0x2a, 0x9c, 0x83, 0x97, 0x69, 0xc3, 0x59, 0xc0, 0x22, 0x4f, 0xd4, 0xa5,
	0x73, 0x64, 0xc5, 0x7b, 0xad, 0x23, 0x2b, 0x44, 0xe8, 0x1f, 0xd4, 0xb9, 0xe4, 0x5e, 0xe0, 0x45,
	0x63, 0xe1, 0xea, 0xf0, 0x8b, 0x81, 0xb7, 0xb6, 0x31, 0x4e, 0xa1, 0xa7, 0x53, 0xf7, 0x7c, 0x2c,
	0x7a, 0x3a, 0xc5, 0x7f, 0x30, 0x24, 0x59, 0xec, 0x15, 0xb9, 0x80, 0xb1, 0x68, 0x55, 0x9d, 0x9a,
	0x9e, 0x14, 0xf7, 0x9a, 0xd4, 0xf4, 0xa4, 0xea, 0xd4, 0x54, 0x92, 0xe4, 0xfd, 0x80, 0x45, 0x7f,
	0x84, 0xab, 0x91, 0xc3, 0x48, 0x12, 0xa9, 0x2c, 0x27, 0x3e, 0x08, 0x58, 0x34, 0x11, 0x17, 0x89,
	0x0f, 0x30, 0xb2, 0x39, 0x69, 0x6b, 0x4a, 0x3e, 0x0b, 0x58, 0xe4, 0x2f, 0xff, 0x2e, 0x9a, 0xb5,
	0xd6, 0x36, 0xde, 0x36, 0x40, 0x5c, 0x3a, 0xc2, 0x6f, 0x06, 0x70, 0xf3, 0xf1, 0x0e, 0xa0, 0x50,
	0x54, 0x9c, 0x37, 0x3a, 0xd3, 0xe4, 0x66, 0x9d, 0x88, 0x8e, 0x53, 0xf3, 0x4c, 0x9b, 0x57, 0x99,
	0x1c, 0xb6, 0xbb, 0x5d, 0xbb, 0x78, 0xc7, 0x71, 0x5c, 0x56, 0x17, 0xee, 0xb5, 0xfc, 0xea, 0xe0,
	0x7f, 0xf8, 0x2d, 0xf7, 0xaa, 0x49, 0xef, 0x3b, 0x7a, 0xd5, 0xf8, 0x0c, 0x7e, 0x62, 0x4d, 0xa9,
	0x4b, 0x52, 0x26, 0x39, 0xbb, 0xad, 0xa6, 0x4b, 0x6c, 0x67, 0x7f, 0xbb, 0x11, 0xd1, 0x6d, 0xbb,
	0x5f, 0x80, 0xdf, 0x61, 0x38, 0x05, 0x58, 0xd1, 0x87, 0x2d, 0x69, 0x6b, 0x12, 0x35, 0xff, 0x85,
	0x33, 0xf0, 0x57, 0xb4, 0x51, 0xb2, 0x35, 0x58, 0x3c, 0x74, 0x9f, 0xfb, 0xf4, 0x13, 0x00, 0x00,
	0xff, 0xff, 0x22, 0x51, 0x06, 0x6d, 0x02, 0x02, 0x00, 0x00,
}
